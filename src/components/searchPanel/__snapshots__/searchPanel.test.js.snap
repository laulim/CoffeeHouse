// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <SearchPanel/> SearchPanel has been rendered 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchPanel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        action="#"
        className="shop__search"
      >
        <label
          className="shop__search-label"
          htmlFor="filter"
        >
          Looking for
        </label>
        <input
          className="shop__search-input"
          id="filter"
          onChange={[Function]}
          placeholder="start typing here..."
          type="text"
        />
      </form>,
      "className": "col-lg-5 offset-1",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "#",
        "children": Array [
          <label
            className="shop__search-label"
            htmlFor="filter"
          >
            Looking for
          </label>,
          <input
            className="shop__search-input"
            id="filter"
            onChange={[Function]}
            placeholder="start typing here..."
            type="text"
          />,
        ],
        "className": "shop__search",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Looking for",
            "className": "shop__search-label",
            "htmlFor": "filter",
          },
          "ref": null,
          "rendered": "Looking for",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "shop__search-input",
            "id": "filter",
            "onChange": [Function],
            "placeholder": "start typing here...",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          action="#"
          className="shop__search"
        >
          <label
            className="shop__search-label"
            htmlFor="filter"
          >
            Looking for
          </label>
          <input
            className="shop__search-input"
            id="filter"
            onChange={[Function]}
            placeholder="start typing here..."
            type="text"
          />
        </form>,
        "className": "col-lg-5 offset-1",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "#",
          "children": Array [
            <label
              className="shop__search-label"
              htmlFor="filter"
            >
              Looking for
            </label>,
            <input
              className="shop__search-input"
              id="filter"
              onChange={[Function]}
              placeholder="start typing here..."
              type="text"
            />,
          ],
          "className": "shop__search",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Looking for",
              "className": "shop__search-label",
              "htmlFor": "filter",
            },
            "ref": null,
            "rendered": "Looking for",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "shop__search-input",
              "id": "filter",
              "onChange": [Function],
              "placeholder": "start typing here...",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Testing <SearchPanel/> Snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchPanel />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        action="#"
        className="shop__search"
      >
        <label
          className="shop__search-label"
          htmlFor="filter"
        >
          Looking for
        </label>
        <input
          className="shop__search-input"
          id="filter"
          onChange={[Function]}
          placeholder="start typing here..."
          type="text"
        />
      </form>,
      "className": "col-lg-5 offset-1",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "#",
        "children": Array [
          <label
            className="shop__search-label"
            htmlFor="filter"
          >
            Looking for
          </label>,
          <input
            className="shop__search-input"
            id="filter"
            onChange={[Function]}
            placeholder="start typing here..."
            type="text"
          />,
        ],
        "className": "shop__search",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Looking for",
            "className": "shop__search-label",
            "htmlFor": "filter",
          },
          "ref": null,
          "rendered": "Looking for",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "shop__search-input",
            "id": "filter",
            "onChange": [Function],
            "placeholder": "start typing here...",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          action="#"
          className="shop__search"
        >
          <label
            className="shop__search-label"
            htmlFor="filter"
          >
            Looking for
          </label>
          <input
            className="shop__search-input"
            id="filter"
            onChange={[Function]}
            placeholder="start typing here..."
            type="text"
          />
        </form>,
        "className": "col-lg-5 offset-1",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "#",
          "children": Array [
            <label
              className="shop__search-label"
              htmlFor="filter"
            >
              Looking for
            </label>,
            <input
              className="shop__search-input"
              id="filter"
              onChange={[Function]}
              placeholder="start typing here..."
              type="text"
            />,
          ],
          "className": "shop__search",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Looking for",
              "className": "shop__search-label",
              "htmlFor": "filter",
            },
            "ref": null,
            "rendered": "Looking for",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "shop__search-input",
              "id": "filter",
              "onChange": [Function],
              "placeholder": "start typing here...",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
